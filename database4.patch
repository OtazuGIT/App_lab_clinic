diff --git a/database.py b/database.py
index 9666ee7b4fc86dedbba70212b5515cf6c7289c78..d68db17608f5435d04bc2c6683778493bdc25363 100644
--- a/database.py
+++ b/database.py
@@ -230,51 +230,51 @@ class LabDB:
             JOIN tests t ON ot.test_id = t.id
             WHERE o.id = ?
         """, (order_id,))
         rows = self.cur.fetchall()
         if not rows:
             return None
         first_name, last_name, doc_type, doc_number, birth_date, sex, origin, hcl, date, obs, req_by, diag, age_years, emitted, emitted_at, _, _ = rows[0]
         patient_info = {
             "name": f"{first_name} {last_name}",
             "doc_type": doc_type,
             "doc_number": doc_number,
             "birth_date": birth_date,
             "sex": sex,
             "origin": origin,
             "hcl": hcl
         }
         order_info = {
             "date": date,
             "observations": obs,
             "requested_by": req_by,
             "diagnosis": diag,
             "age_years": age_years,
             "emitted": emitted,
             "emitted_at": emitted_at,
         }
-        results = [(row[12], row[13]) for row in rows]
+        results = [(row[15], row[16]) for row in rows]
         return {"patient": patient_info, "order": order_info, "results": results}
     def save_results(self, order_id, results_dict):
         for name, result in results_dict.items():
             if name in self.test_map:
                 tid = self.test_map[name]
                 if isinstance(result, dict):
                     stored = json.dumps(result, ensure_ascii=False)
                 else:
                     stored = result
                 self.cur.execute(
                     "UPDATE order_tests SET result=? WHERE order_id=? AND test_id=?",
                     (stored, order_id, tid)
                 )
         # Verificar si quedan resultados vac√≠os
         self.cur.execute("SELECT COUNT(*) FROM order_tests WHERE order_id=? AND (result IS NULL OR result='')", (order_id,))
         remaining = self.cur.fetchone()[0]
         completed_flag = 1 if remaining == 0 else 0
         self.cur.execute("UPDATE orders SET completed=? WHERE id=?", (completed_flag, order_id))
         self.conn.commit()
         return completed_flag
     def mark_order_emitted(self, order_id, emitted_at):
         self.cur.execute(
             "UPDATE orders SET emitted=1, emitted_at=? WHERE id=?",
             (emitted_at, order_id)
         )
